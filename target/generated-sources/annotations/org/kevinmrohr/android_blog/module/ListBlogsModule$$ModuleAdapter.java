// Code generated by dagger-compiler.  Do not edit.
package org.kevinmrohr.android_blog.module;


import dagger.internal.Binding;
import dagger.internal.ModuleAdapter;
import java.util.Map;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class ListBlogsModule$$ModuleAdapter extends ModuleAdapter<ListBlogsModule> {
  private static final String[] INJECTS = { "members/org.kevinmrohr.android_blog.activity.ListBlogsActivity", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public ListBlogsModule$$ModuleAdapter() {
    super(INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, false /*library*/);
  }

  @Override
  public ListBlogsModule newModule() {
    return new org.kevinmrohr.android_blog.module.ListBlogsModule();
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(Map<String, Binding<?>> map) {
    map.put("org.codehaus.jackson.map.ObjectMapper", new ObjectMapperProvidesAdapter(module));
  }

  /**
   * A {@code Binder<org.codehaus.jackson.map.ObjectMapper>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   * 
   * Being a {@code Provider<org.codehaus.jackson.map.ObjectMapper>} and handling creation and
   * preparation of object instances.
   */
  public static final class ObjectMapperProvidesAdapter extends Binding<org.codehaus.jackson.map.ObjectMapper>
      implements Provider<org.codehaus.jackson.map.ObjectMapper> {
    private final ListBlogsModule module;

    public ObjectMapperProvidesAdapter(ListBlogsModule module) {
      super("org.codehaus.jackson.map.ObjectMapper", null, NOT_SINGLETON, "org.kevinmrohr.android_blog.module.ListBlogsModule.objectMapper()");
      this.module = module;
      setLibrary(false);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<org.codehaus.jackson.map.ObjectMapper>}.
     */
    @Override
    public org.codehaus.jackson.map.ObjectMapper get() {
      return module.objectMapper();
    }
  }
}
